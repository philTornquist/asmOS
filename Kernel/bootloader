use16
_MODE = 16


loadInitalize:
mov al, INITALIZE_SIZE shr 9
mov bx, INITALIZE_ADDRESS / 0x10
mov es, bx
xor bx, bx
mov ah, 0x02
mov ch, 0x00
mov cl, 0x02
mov dh, 0x00

int 0x13
jc loadInitalize

loadKernel:
mov al, KERNEL_SIZE shr 9
mov bx, KERNEL_ADDRESS / 0x10
mov es, bx
xor bx, bx
mov ah, 0x02
mov ch, 0x00
mov cl, 0x02 + (INITALIZE_SIZE shr 9)
mov dh, 0x00

int 0x13
jc loadKernel

loadTests:
mov al, PROGRAMS_SIZE shr 9
mov bx, TEST_PROGRAMS / 0x10
mov es, bx
xor bx, bx
mov ah, 0x02
mov ch, 0x00
mov cl, 0x02 + (INITALIZE_SIZE shr 9) + (KERNEL_SIZE shr 9)
mov dh, 0x00

int 0x13
jc loadTests

getMemory:
mov bx, 0x7e0
mov es, bx
mov di, 0
xor ebx, ebx		; ebx must be 0 to start
xor bp, bp		; keep an entry count in bp
mov edx, 0x0534D4150	; Place "SMAP" into edx
mov eax, 0xe820
mov [es:di + 20], dword 1	; force a valid ACPI 3.X entry
mov ecx, 24		; ask for 24 bytes
int 0x15
jc short .failed	; carry set on first call means "unsupported function"
mov edx, 0x0534D4150	; Some BIOSes apparently trash this register?
cmp eax, edx		; on success, eax must have been reset to "SMAP"
jne short .failed
test ebx, ebx		; ebx = 0 implies list is only 1 entry long (worthless)
je short .failed
jmp short .jmpin
.e820lp:
mov eax, 0xe820		; eax, ecx get trashed on every int 0x15 call
mov [es:di + 20], dword 1	; force a valid ACPI 3.X entry
mov ecx, 24		; ask for 24 bytes again
int 0x15
jc short .e820f		; carry set means "end of list already reached"
mov edx, 0x0534D4150	; repair potentially trashed register
.jmpin:
jcxz .skipent		; skip any 0 length entries
cmp cl, 20		; got a 24 byte ACPI 3.X response?
jbe short .notext
test byte [es:di + 20], 1	; if so: is the "ignore this data" bit clear?
je short .skipent
.notext:
mov ecx, [es:di + 8]	; get lower dword of memory region length
or ecx, [es:di + 12]	; "or" it with upper dword to test for zero
jz .skipent		; if length qword is 0, skip entry
inc bp			; got a good entry: ++count, move to next storage spot
add di, 24
.skipent:
test ebx, ebx		; if ebx resets to 0, list is complete
jne short .e820lp
.e820f:
mov [memory_map_count], bp	; store the entry count
clc			; there is "jc" on end of list to this point, so the carry must be cleared
jmp .done
.failed:
stc			; "function unsupported" error exit	
.done:

enableVGA:
mov ax, 0x13	; ah=0 al=0x13
int 0x10

; Enable VGA Text mode
;mov ax, 0x03
;int 0x10

cli
jmp INITALIZE
